/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'

const Avatar=({props, rotation, position, scale})=>{
  const { nodes, materials } = useGLTF('/models/model.glb');

    useEffect(() => {
    const leftArm = nodes.Hips.getObjectByName('LeftArm');
    const rightArm = nodes.Hips.getObjectByName('RightArm');
    const leftForeArm = nodes.Hips.getObjectByName('LeftForeArm');
    const rightForeArm = nodes.Hips.getObjectByName('RightForeArm');

    // Rotate upper arms downward from T-pose
    if (leftArm) leftArm.rotation.set(...rotation);
    // if (rightArm) rightArm.rotation.z = Math.PI / 2.5;

    // // Slight bend in forearms
    // if (leftForeArm) leftForeArm.rotation.x = -Math.PI / 20;
    // if (rightForeArm) rightForeArm.rotation.x = -Math.PI / 20;
  }, [nodes]);
  
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.Hips} />
      <skinnedMesh
        geometry={nodes.avaturn_body.geometry}
        material={materials.avaturn_body_material}
        skeleton={nodes.avaturn_body.skeleton}
      />
      <skinnedMesh
        geometry={nodes.avaturn_hair_0.geometry}
        material={materials.avaturn_hair_0_material}
        skeleton={nodes.avaturn_hair_0.skeleton}
      />
      <skinnedMesh
        geometry={nodes.avaturn_shoes_0.geometry}
        material={materials.avaturn_shoes_0_material}
        skeleton={nodes.avaturn_shoes_0.skeleton}
      />
      <skinnedMesh
        geometry={nodes.avaturn_look_0.geometry}
        material={materials.avaturn_look_0_material}
        skeleton={nodes.avaturn_look_0.skeleton}
      />
    </group>
  )
}

useGLTF.preload('/models/model.glb')

export default Avatar;